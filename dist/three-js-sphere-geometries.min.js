var THREESphereGeometries=function(e,t){"use strict";function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var u=r(THREE);function o(e,t,r){let u=`${e}: ${t} is duplicated. Your bundle includes ${t} twice. Please repair your bundle.`;try{if(void 0===THREE[t])return void(THREE[t]=r);if(THREE[t]!==r)throw u}catch(t){if(t===u)throw t;console.warn(`${e}: Duplication check unavailable.`+t)}}class f extends u.default.IcosahedronBufferGeometry{constructor(e,t){super(e,t),this.type="IcosahedronSphereBufferGeometry"}}class i extends u.default.BufferGeometry{constructor(e,t){super(),this.type="SpherifiedCubeBufferGeometry",e=e||1,t=t||8,this.parameters={radius:e,widthHeightSegments:t};var r=new u.default.Vector3,o=new u.default.Vector3,f=new u.default.Vector3,i=[],s=[],a=[],n=[],l=new u.default.BoxBufferGeometry(1,1,1,t,t,t);let h=l.getAttribute("position").array;for(let e=0;e<h.length;++e)s.push(h[e]);let d=l.getAttribute("normal").array;for(let e=0;e<d.length;++e)a.push(d[e]);let y=l.getAttribute("uv").array;for(let e=0;e<y.length;++e)n.push(y[e]);let p=l.index.array;for(let e=0;e<p.length;++e)i.push(p[e]);var c,b=[],m=[];for(c=0;c<s.length;c+=3)r.x=2*s[c],r.y=2*s[c+1],r.z=2*s[c+2],o.x=r.x**2,o.y=r.y**2,o.z=r.z**2,r.x*=Math.sqrt(1-.5*(o.y+o.z)+o.y*o.z/3)*e,r.y*=Math.sqrt(1-.5*(o.z+o.x)+o.z*o.x/3)*e,r.z*=Math.sqrt(1-.5*(o.x+o.y)+o.x*o.y/3)*e,b.push(r.x,r.y,r.z),f.set(r.x,r.y,r.z).normalize(),m.push(f.x,f.y,f.z);this.setIndex(i),this.setAttribute("position",new u.default.Float32BufferAttribute(b,3)),this.setAttribute("normal",new u.default.Float32BufferAttribute(m,3)),this.setAttribute("uv",new u.default.Float32BufferAttribute(n,2))}}class s extends u.default.BufferGeometry{constructor(e,t){super(),this.type="RoundedCubeBufferGeometry",e=e||1,t=t||8,this.parameters={radius:e,widthHeightSegments:t};var r=new u.default.Vector3,o=new u.default.Vector3,f=[],i=[],s=[],a=[],n=new u.default.BoxBufferGeometry(1,1,1,t,t,t);let l=n.getAttribute("position").array;for(let e=0;e<l.length;++e)i.push(l[e]);let h=n.getAttribute("normal").array;for(let e=0;e<h.length;++e)s.push(h[e]);let d=n.getAttribute("uv").array;for(let e=0;e<d.length;++e)a.push(d[e]);let y=n.index.array;for(let e=0;e<y.length;++e)f.push(y[e]);var p,c=[],b=[];for(p=0;p<i.length;p+=3)r.x=i[p],r.y=i[p+1],r.z=i[p+2],r.normalize(),r.multiplyScalar(e),c.push(r.x,r.y,r.z),o.set(r.x,r.y,r.z).normalize(),b.push(o.x,o.y,o.z);this.setIndex(f),this.setAttribute("position",new u.default.Float32BufferAttribute(c,3)),this.setAttribute("normal",new u.default.Float32BufferAttribute(b,3)),this.setAttribute("uv",new u.default.Float32BufferAttribute(a,2))}}var a=Object.freeze({__proto__:null,IcosahedronSphereBufferGeometry:f,SpherifiedCubeBufferGeometry:i,RoundedCubeBufferGeometry:s});const n="three-js-sphere-geometries";var l,h;return l=n,h=130,THREE.REVISION!=h&&console.error(`${l} depends on THREE revision ${h}, but current revision is ${THREE.REVISION}.`),o(n,"SphereGeometries",a),o(n,"IcosahedronSphereBufferGeometry",f),o(n,"SphereGeometSpherifiedCubeBufferGeometryries",i),o(n,"RoundedCubeBufferGeometry",s),e.IcosahedronSphereBufferGeometry=f,e.RoundedCubeBufferGeometry=s,e.SpherifiedCubeBufferGeometry=i,Object.defineProperty(e,"__esModule",{value:!0}),e}({});
